include 'disable_assets/no_assets.gin'
include 'scene_types/under_water.gin'
include 'auv/auv_camera.gin'

include 'performance/fast_terrain_assets.gin'
#include 'performance/high_quality_terrain.gin'
# include 'performance/dev.gin'
run_erosion.n_iters = [1,1]

surface.registry.mountain_collection = [
    ('sandcomplex', 1),
    ('mountain', 5),
    ("sandstone", 2),
    ("sand", 1),
    ('dirt', 1),
]
surface.registry.ground_collection = [
    ('sandcomplex', 2),
    ('sand', 1),
    ('cracked_ground', 1),
    ('stone', 1),
    ('chunkyrock', 0),
    ('sandstone', 1),
]

full/configure_render_cycles.min_samples = 0
full/configure_render_cycles.num_samples = 128
configure_render_cycles.min_samples = 0
configure_render_cycles.num_samples = 128

Terrain.populated_bounds = (-20, 20, -20, 20, -30, 5)
OcMesher.bounds = (-20, 20, -20, 20, -30, 5)

export.spherical = False # use OcMesher
min_terrain_distance = 1.5
keep_cam_pose_proposal.min_terrain_distance = %min_terrain_distance
#OcMesher.pixels_per_cube = 4 # hifi 4 default 8
#OpaqueSphericalMesher.pixels_per_cube = 0.92 # hifi 0.92 lofi 4
#TransparentSphericalMesher.pixels_per_cube = 1.8 # hifi 1.38 lofi 4
target_face_size.global_multiplier = 2 # use this for dev. Not sure it gets used for my assets

compose_scene.inview_distance = 12
placement.populate_all.dist_cull = 12
compose_scene.near_distance = 12
compose_scene.center_distance = 15  # Used for creature animation


# Configure straight path with lower frequency frames. Based on AUV Nimbus
#animation_policy.AnimPolicyRandomForwardWalk.speed = 0.5
#animation_policy.AnimPolicyRandomForwardWalk.yaw_dist = 0
#animation_policy.AnimPolicyRandomForwardWalk.step_range = (1, 2)
fps = 2
compose_scene.fps = %fps #24
animation_policy.AnimPolicyMowTheLawn.speed = 1.0
animation_policy.AnimPolicyMowTheLawn.fps = %fps
animation_policy.AnimPolicyMowTheLawn.transect_multiple = 5
animation_policy.AnimPolicyMowTheLawn.turn_frames = 4


full/render_image.passes_to_save = []

compose_scene.urchin_chance = 1.0
compose_scene.urchinkina_chance = 0.0
compose_scene.handfish_chance = 1.0
compose_scene.fish_school_chance = 0.3
compose_scene.colourboard_chance = 1.0
compose_scene.plasticbag_chance = 0.2
compose_scene.seaweed_chance = 0.3
compose_scene.lichen_chance = 0.3
compose_scene.kelp_chance = 0.0
compose_scene.corals_chance = 0.3
compose_scene.coral_density = 0.8
compose_scene.horizontal_coral_density = 0.8
compose_scene.rocks_chance = 0.4
compose_scene.seashell_chance = 0.5
compose_scene.scolymia_chance = 0.0
compose_scene.jellyfish_chance = 0.2
compose_scene.marine_snow_particles_chance = 0.3
compose_scene.boulders_chance = 0.2
compose_scene.ground_creatures_chance = 0.3 #crustaceans

populate_scene.slime_mold_chance = 0.0
populate_scene.lichen_chance = 0.0
populate_scene.moss_chance = 0.0

compose_scene.grass_chance = 0.00


compose_scene.lighting_enabled = True
nishita_lighting.strength = 0.0

compose_scene.caustics_chance = 0.0

water.geo.water_detail = 0
water.geo.water_height = ("uniform", 0.05, 0.15)
water.geo.with_ripples = 0
water.geo.with_waves=False
#Absorption
water.shader.volume_density = ("clip_gaussian", 0.8, 0.2, 0.3, 1.1)
water.shader.color = ("color_category", 'seawater')
#Scattering
water.shader.scatter_color = ("color_category", 'seawater_scatter')
water.shader.anisotropy = ("clip_gaussian", 0.5, 0.1, 0.3, 1)
water.shader.scatter_density=("clip_gaussian", 0.05, 0.02, 0, 0.1)
water.shader.colored = 1 #True
water.shader.emissive_foam = 0
water.is_ocean = False

compose_scene.turbulence_chance = 0.0
turbulence_effector.strength = ("uniform", 0, 7)
turbulence_effector.size = ("uniform", 1.5, 4.5)
turbulence_effector.flow = 1
turbulence_effector.noise = 10

# scene composition config
LandTiles.tile_heights = [-20]
Ground.height = -20

multi_mountains_params.height = ("uniform", 3, 2)

